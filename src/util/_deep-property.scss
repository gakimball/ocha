/// Assertion function for `property` if the `deep` flag is being used.
@function -ocha-deep-property($assert, $property) {
  $returned: map-get($assert, value);
  $negative: map-get($assert, negative);
  $test: if($negative, 'notEql', 'eql');
  $key: null;
  $value: null;
  $message: '';
  $message-add: '';

  @if type-of($property) == 'list' {
    $key: nth($property, 1);
    $value: nth($property, 2);
    $message-add: '#{$key} with value #{$value}';
  }
  @else {
    $key: $property;
    $value: null;
    $message-add: '#{$key}';
  }

  $result: if(-ocha-check-deep-property($returned, $key, $value), true, false);

  @if not $negative {
    $message: 'Expected #{inspect($returned)} to have deep property #{$message-add}';
  }
  @else {
    $result: if($result, false, true);
    $message: 'Expected #{inspect($returned)} to not have deep property #{$message-add}';
  }

  @return map-merge($assert, (result: (
    test: $test,
    passed: $result,
    assertion: $message,
    expected: $key,
    returned: map-keys($returned),
    type: 'key',
  )));
}
