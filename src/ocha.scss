@import 'true';

@import 'util/comparison';
@import 'util/deep-property';
@import 'util/equal';
@import 'util/string';
@import 'util/true';
@import 'functions/comparison';
@import 'functions/flags';
@import 'functions/inspection';
@import 'functions/keys';
@import 'functions/language';
@import 'functions/type';

$standalone: (
  'ok',
  'true',
  'false',
  'null',
  'empty',
);

@mixin expect($args) {
  $value: nth($args, 1);
  $functions: -ocha-str-slice($args, 2, length($args) - 1);
  $final: nth($args, length($args));

  @if index($standalone, $final) {
    $functions: append($functions, $final);
    $final: null;
  }

  /*
    result: (
      passed: false,
      assertion: 'Expect 2 to equal 4',
      expected: 2,
      returned: 4,
      type: null,
      type: 'length',
    )
  */
  $assertion: (
    value: $value,
    negative: false,
    length: false,
    all: true,
    only: true,
    deep: false,
  );

  @each $func in $functions {
    @if index($functions, $func) == length($functions) {
      $assertion: call('-ocha-#{$func}', $assertion, $final);
    }
    @else {
      $assertion: call('-ocha-#{$func}', $assertion);
    }
  }

}
